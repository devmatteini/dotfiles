#!/usr/bin/env python3

from installer import (
    Package,
    bash_completion_for,
    installer,
    join,
    write_file,
    zsh_completion_for,
)


INSTALL_FZF = [
    "[ ! -d ~/.fzf ] && git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf || git -C ~/.fzf pull",
    "~/.fzf/install --no-key-bindings --completion --no-update-rc",
]

# https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
INSTALL_AWS = [
    'curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"',
    "unzip -u awscliv2.zip",
    "./aws/install --install-dir ~/.local/share/aws --bin-dir ~/.local/bin --update",
    "rm -rf awscliv2.zip aws/",
    # create bash completion file
    write_file(
        bash_completion_for("aws"),
        """#/usr/bin/env bash
complete -C ~/.local/bin/aws_completer aws""",
    ),
    write_file(
        zsh_completion_for("aws"),
        """#compdef aws
complete -C ~/.local/bin/aws_completer aws""",
    ),
]

INSTALL_TLDR = [
    "dra download -s tealdeer-linux-x86_64-musl -o ~/.local/bin/tldr dbrgn/tealdeer",
    "chmod +x ~/.local/bin/tldr",
    # Download bash completion
    f'dra download -s completions_bash -o {bash_completion_for("tldr")} dbrgn/tealdeer',
    f'dra download -s completions_zsh -o {zsh_completion_for("tldr")} dbrgn/tealdeer',
]

INSTALL_MINISERVE = [
    'dra download -s "miniserve-{tag}-x86_64-unknown-linux-gnu" -o ~/.local/bin/miniserve svenstaro/miniserve',
    "chmod +x ~/.local/bin/miniserve",
    f'miniserve --print-completions bash > {bash_completion_for("miniserve")}',
    f'miniserve --print-completions zsh > {zsh_completion_for("miniserve")}',
]

INSTALL_DRA = [
    'dra download -i -s "dra-{tag}-x86_64-unknown-linux-musl.tar.gz" devmatteini/dra',
    "mv dra ~/.local/bin/",
    f'dra completion bash > {bash_completion_for("dra")}',
    f'dra completion zsh > {zsh_completion_for("dra")}',
]

INSTALL_ATUIN = [
    "dra download -i -s atuin-v{tag}-x86_64-unknown-linux-musl.tar.gz -o ~/.local/bin/ atuinsh/atuin",
    '[ ! -e ~/.local/share/atuin/history.db ] && atuin import auto || echo "skip import, just update"',
    "curl https://raw.githubusercontent.com/rcaloras/bash-preexec/master/bash-preexec.sh -o ~/.bash-preexec.sh",
    f'atuin gen-completions -s bash > {bash_completion_for("atuin")}',
    f'atuin gen-completions -s zsh > {zsh_completion_for("atuin")}',
]

INSTALL_ERDTREE = [
    "dra download -s erd-v{tag}-x86_64-unknown-linux-musl.tar.gz -i -o ~/.local/bin/ solidiquis/erdtree",
    f'erd --completions bash > {bash_completion_for("erd")}',
    f'erd --completions zsh > {zsh_completion_for("erd")}',
]

INSTALL_JUST = [
    "dra download -s just-{tag}-x86_64-unknown-linux-musl.tar.gz -i -o ~/.local/bin/ casey/just",
    f'just --completions bash > {bash_completion_for("just")}',
    f'just --completions zsh > {zsh_completion_for("just")}',
]

INSTALL_MISE = [
    "dra download -s mise-v{tag}-linux-x64-musl -o ~/.local/bin/mise jdx/mise",
    "chmod +x ~/.local/bin/mise",
    f'mise completion bash > {bash_completion_for("mise")}',
    f'mise completion zsh > {zsh_completion_for("mise")}',
]

INSTALL_EZA = [
    "dra download -i -s eza_x86_64-unknown-linux-musl.tar.gz -o ~/.local/bin/ eza-community/eza",
    f'curl -o {zsh_completion_for("eza")} https://raw.githubusercontent.com/eza-community/eza/main/completions/zsh/_eza',
]

installer(
    "tools",
    [
        # https://github.com/devmatteini/dra
        Package("dra", join(INSTALL_DRA)),
        # https://github.com/junegunn/fzf
        Package("fzf", join(INSTALL_FZF)),
        # https://github.com/koalaman/shellcheck
        Package("shellcheck", "sudo apt install -y shellcheck"),
        # https://github.com/dbrgn/tealdeer
        Package("tldr", join(INSTALL_TLDR)),
        # https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
        Package("aws", join(INSTALL_AWS)),
        # https://github.com/sharkdp/bat
        Package(
            "bat",
            'dra download -i -s "bat-v{tag}-x86_64-unknown-linux-gnu.tar.gz" -o ~/.local/bin sharkdp/bat',
        ),
        # https://github.com/sharkdp/fd
        Package(
            "fd",
            'dra download -i -s "fd-v{tag}-x86_64-unknown-linux-gnu.tar.gz" -o ~/.local/bin sharkdp/fd',
        ),
        # https://github.com/BurntSushi/ripgrep
        Package(
            "rg",
            'dra download -i -s "ripgrep-{tag}-x86_64-unknown-linux-musl.tar.gz" -o ~/.local/bin BurntSushi/ripgrep',
        ),
        # https://github.com/starship/starship
        Package(
            "starship",
            "dra download -s starship-x86_64-unknown-linux-gnu.tar.gz -i -o ~/.local/bin starship/starship",
        ),
        # https://github.com/direnv/direnv
        Package("direnv", "sudo apt install -y direnv"),
        # https://github.com/svenstaro/miniserve
        Package("miniserve", join(INSTALL_MINISERVE)),
        # https://github.com/devmatteini/pihole-switch
        Package(
            "phs",
            "dra download -i -s phs.zip -o ~/.local/bin devmatteini/pihole-switch",
        ),
        # https://github.com/XAMPPRocky/tokei
        Package(
            "tokei",
            "dra download -i -s tokei-x86_64-unknown-linux-musl.tar.gz -o ~/.local/bin XAMPPRocky/tokei",
        ),
        # https://github.com/balena-io/etcher
        Package(
            "balena-etcher",
            "sudo dra download -s balena-etcher_{tag}_amd64.deb -i balena-io/etcher || sudo apt -y --fix-broken install",
        ),
        # https://github.com/atuinsh/atuin
        Package("atuin", join(INSTALL_ATUIN)),
        # https://github.com/sharkdp/hyperfine
        Package(
            "hyperfine",
            "dra download -i -s hyperfine-v{tag}-x86_64-unknown-linux-musl.tar.gz -o ~/.local/bin sharkdp/hyperfine",
        ),
        # https://github.com/solidiquis/erdtree
        Package("erdtree", join(INSTALL_ERDTREE)),
        # https://github.com/lycheeverse/lychee
        Package(
            "lychee",
            "dra download -i -s lychee-v{tag}-x86_64-unknown-linux-musl.tar.gz -o ~/.local/bin lycheeverse/lychee",
        ),
        # https://github.com/astral-sh/ruff
        Package("ruff", "pipx install ruff"),
        # https://github.com/casey/just
        Package("just", join(INSTALL_JUST)),
        # https://github.com/jdx/mise
        Package("mise", join(INSTALL_MISE)),
        # https://github.com/eza-community/eza
        Package("eza", join(INSTALL_EZA)),
    ],
)


# thefuck https://github.com/nvbn/thefuck
# pip3 install thefuck

# Joplin https://github.com/laurent22/joplin
# wget -O - https://raw.githubusercontent.com/laurent22/joplin/master/Joplin_install_and_update.sh | bash
